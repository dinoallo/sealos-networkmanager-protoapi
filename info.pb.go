// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: info.proto

package sealos_networkmanager_protoapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrafficType int32

const (
	TrafficType_IPv4Ingress TrafficType = 0
	TrafficType_IPv4Egress  TrafficType = 1
	TrafficType_IPv6Ingress TrafficType = 2
	TrafficType_IPv6Egress  TrafficType = 3
	TrafficType_Unknown     TrafficType = 4
)

// Enum value maps for TrafficType.
var (
	TrafficType_name = map[int32]string{
		0: "IPv4Ingress",
		1: "IPv4Egress",
		2: "IPv6Ingress",
		3: "IPv6Egress",
		4: "Unknown",
	}
	TrafficType_value = map[string]int32{
		"IPv4Ingress": 0,
		"IPv4Egress":  1,
		"IPv6Ingress": 2,
		"IPv6Egress":  3,
		"Unknown":     4,
	}
)

func (x TrafficType) Enum() *TrafficType {
	p := new(TrafficType)
	*p = x
	return p
}

func (x TrafficType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrafficType) Descriptor() protoreflect.EnumDescriptor {
	return file_info_proto_enumTypes[0].Descriptor()
}

func (TrafficType) Type() protoreflect.EnumType {
	return &file_info_proto_enumTypes[0]
}

func (x TrafficType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrafficType.Descriptor instead.
func (TrafficType) EnumDescriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

// The `Status` type defines a logical error model that is suitable for
// different programming environments, including REST APIs and RPC APIs. It is
// used by [gRPC](https://github.com/grpc). Each `Status` message contains
// three pieces of data: error code, error message, and error details.
//
// You can find out more about this error model and how to work with it in the
// [API Design Guide](https://cloud.google.com/apis/design/errors).
// message Status is originally from https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status code, which should be an enum value of
	// [google.rpc.Code][google.rpc.Code].
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=proto.Code" json:"code,omitempty"`
	// A developer-facing error message, which should be in English. Any
	// user-facing error message should be localized and sent in the
	// [google.rpc.Status.details][google.rpc.Status.details] field, or localized
	// by the client.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{1}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type TrafficStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace          string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type               *TrafficType `protobuf:"varint,2,opt,name=type,proto3,enum=proto.TrafficType,oneof" json:"type,omitempty"`
	Identity           []uint32     `protobuf:"varint,3,rep,packed,name=identity,proto3" json:"identity,omitempty"`
	LabelsIn           []*Label     `protobuf:"bytes,4,rep,name=labels_in,json=labelsIn,proto3" json:"labels_in,omitempty"`
	LabelsNotIn        []*Label     `protobuf:"bytes,5,rep,name=labels_not_in,json=labelsNotIn,proto3" json:"labels_not_in,omitempty"`
	LabelsExists       []*Label     `protobuf:"bytes,6,rep,name=labels_exists,json=labelsExists,proto3" json:"labels_exists,omitempty"`
	LabelsNotExists    []*Label     `protobuf:"bytes,7,rep,name=labels_not_exists,json=labelsNotExists,proto3" json:"labels_not_exists,omitempty"`
	LabelsEquals       []*Label     `protobuf:"bytes,8,rep,name=labels_equals,json=labelsEquals,proto3" json:"labels_equals,omitempty"`
	LabelsNotEquals    []*Label     `protobuf:"bytes,9,rep,name=labels_not_equals,json=labelsNotEquals,proto3" json:"labels_not_equals,omitempty"`
	LabelsDoubleEquals []*Label     `protobuf:"bytes,10,rep,name=labels_double_equals,json=labelsDoubleEquals,proto3" json:"labels_double_equals,omitempty"`
}

func (x *TrafficStatRequest) Reset() {
	*x = TrafficStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficStatRequest) ProtoMessage() {}

func (x *TrafficStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficStatRequest.ProtoReflect.Descriptor instead.
func (*TrafficStatRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{2}
}

func (x *TrafficStatRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TrafficStatRequest) GetType() TrafficType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return TrafficType_IPv4Ingress
}

func (x *TrafficStatRequest) GetIdentity() []uint32 {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *TrafficStatRequest) GetLabelsIn() []*Label {
	if x != nil {
		return x.LabelsIn
	}
	return nil
}

func (x *TrafficStatRequest) GetLabelsNotIn() []*Label {
	if x != nil {
		return x.LabelsNotIn
	}
	return nil
}

func (x *TrafficStatRequest) GetLabelsExists() []*Label {
	if x != nil {
		return x.LabelsExists
	}
	return nil
}

func (x *TrafficStatRequest) GetLabelsNotExists() []*Label {
	if x != nil {
		return x.LabelsNotExists
	}
	return nil
}

func (x *TrafficStatRequest) GetLabelsEquals() []*Label {
	if x != nil {
		return x.LabelsEquals
	}
	return nil
}

func (x *TrafficStatRequest) GetLabelsNotEquals() []*Label {
	if x != nil {
		return x.LabelsNotEquals
	}
	return nil
}

func (x *TrafficStatRequest) GetLabelsDoubleEquals() []*Label {
	if x != nil {
		return x.LabelsDoubleEquals
	}
	return nil
}

type TrafficStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace *string                `protobuf:"bytes,1,opt,name=namespace,proto3,oneof" json:"namespace,omitempty"`
	Pod       *string                `protobuf:"bytes,2,opt,name=pod,proto3,oneof" json:"pod,omitempty"`
	Identity  *uint32                `protobuf:"varint,3,opt,name=identity,proto3,oneof" json:"identity,omitempty"`
	Bytes     *uint64                `protobuf:"varint,4,opt,name=bytes,proto3,oneof" json:"bytes,omitempty"`
	LastSync  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=lastSync,proto3,oneof" json:"lastSync,omitempty"`
	Status    *Status                `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TrafficStatResponse) Reset() {
	*x = TrafficStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficStatResponse) ProtoMessage() {}

func (x *TrafficStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficStatResponse.ProtoReflect.Descriptor instead.
func (*TrafficStatResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{3}
}

func (x *TrafficStatResponse) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *TrafficStatResponse) GetPod() string {
	if x != nil && x.Pod != nil {
		return *x.Pod
	}
	return ""
}

func (x *TrafficStatResponse) GetIdentity() uint32 {
	if x != nil && x.Identity != nil {
		return *x.Identity
	}
	return 0
}

func (x *TrafficStatResponse) GetBytes() uint64 {
	if x != nil && x.Bytes != nil {
		return *x.Bytes
	}
	return 0
}

func (x *TrafficStatResponse) GetLastSync() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSync
	}
	return nil
}

func (x *TrafficStatResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_info_proto protoreflect.FileDescriptor

var file_info_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x43, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfb, 0x03, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x69,
	0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x49, 0x6e, 0x12,
	0x30, 0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4e, 0x6f, 0x74, 0x49,
	0x6e, 0x12, 0x31, 0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x11, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x6e,
	0x6f, 0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x31,
	0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x71, 0x75, 0x61, 0x6c,
	0x73, 0x12, 0x38, 0x0a, 0x11, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x5f,
	0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x14, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x71, 0x75,
	0x61, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03,
	0x70, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x04, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x6f, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x2a, 0x5c, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x50, 0x76, 0x34, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x50, 0x76, 0x34, 0x45, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x50, 0x76, 0x36, 0x45, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x04, 0x32, 0x5a,
	0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x6e, 0x6f, 0x61, 0x6c, 0x6c,
	0x6f, 0x2f, 0x73, 0x65, 0x61, 0x6c, 0x6f, 0x73, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_info_proto_rawDescOnce sync.Once
	file_info_proto_rawDescData = file_info_proto_rawDesc
)

func file_info_proto_rawDescGZIP() []byte {
	file_info_proto_rawDescOnce.Do(func() {
		file_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_info_proto_rawDescData)
	})
	return file_info_proto_rawDescData
}

var file_info_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_info_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_info_proto_goTypes = []interface{}{
	(TrafficType)(0),              // 0: proto.TrafficType
	(*Status)(nil),                // 1: proto.Status
	(*Label)(nil),                 // 2: proto.Label
	(*TrafficStatRequest)(nil),    // 3: proto.TrafficStatRequest
	(*TrafficStatResponse)(nil),   // 4: proto.TrafficStatResponse
	(Code)(0),                     // 5: proto.Code
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_info_proto_depIdxs = []int32{
	5,  // 0: proto.Status.code:type_name -> proto.Code
	0,  // 1: proto.TrafficStatRequest.type:type_name -> proto.TrafficType
	2,  // 2: proto.TrafficStatRequest.labels_in:type_name -> proto.Label
	2,  // 3: proto.TrafficStatRequest.labels_not_in:type_name -> proto.Label
	2,  // 4: proto.TrafficStatRequest.labels_exists:type_name -> proto.Label
	2,  // 5: proto.TrafficStatRequest.labels_not_exists:type_name -> proto.Label
	2,  // 6: proto.TrafficStatRequest.labels_equals:type_name -> proto.Label
	2,  // 7: proto.TrafficStatRequest.labels_not_equals:type_name -> proto.Label
	2,  // 8: proto.TrafficStatRequest.labels_double_equals:type_name -> proto.Label
	6,  // 9: proto.TrafficStatResponse.lastSync:type_name -> google.protobuf.Timestamp
	1,  // 10: proto.TrafficStatResponse.status:type_name -> proto.Status
	3,  // 11: proto.InfoService.GetTrafficStat:input_type -> proto.TrafficStatRequest
	4,  // 12: proto.InfoService.GetTrafficStat:output_type -> proto.TrafficStatResponse
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_info_proto_init() }
func file_info_proto_init() {
	if File_info_proto != nil {
		return
	}
	file_code_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_info_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_info_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_info_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_info_proto_goTypes,
		DependencyIndexes: file_info_proto_depIdxs,
		EnumInfos:         file_info_proto_enumTypes,
		MessageInfos:      file_info_proto_msgTypes,
	}.Build()
	File_info_proto = out.File
	file_info_proto_rawDesc = nil
	file_info_proto_goTypes = nil
	file_info_proto_depIdxs = nil
}
