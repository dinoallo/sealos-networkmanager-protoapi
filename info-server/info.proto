syntax = "proto3";
package proto;

import "google/protobuf/timestamp.proto";
import "code.proto";
option go_package = "github.com/dinoallo/sealos-networkmanager-protoapi/info-server";

// The `Status` type defines a logical error model that is suitable for
// different programming environments, including REST APIs and RPC APIs. It is
// used by [gRPC](https://github.com/grpc). Each `Status` message contains
// three pieces of data: error code, error message, and error details.
//
// You can find out more about this error model and how to work with it in the
// [API Design Guide](https://cloud.google.com/apis/design/errors).
// message Status is originally from https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
message Status {
  // The status code, which should be an enum value of
  // [google.rpc.Code][google.rpc.Code].
  Code code = 1;

  // A developer-facing error message, which should be in English. Any
  // user-facing error message should be localized and sent in the
  // [google.rpc.Status.details][google.rpc.Status.details] field, or localized
  // by the client.
  string message = 2;
}

enum TrafficType {
  IPv4Ingress = 0;
  IPv4Egress = 1;
  IPv6Ingress = 2;
  IPv6Egress = 3;
  Unknown = 4;
}

message Label {
  string key = 1;
  repeated string value = 2;
}

message TrafficStatRequest {
  string namespace = 1;
  optional TrafficType type = 2;
  repeated uint32 identity = 3;
  repeated Label labels_in = 4;
  repeated Label labels_not_in = 5;
  repeated Label labels_exists = 6;
  repeated Label labels_not_exists = 7;
  repeated Label labels_equals = 8;
  repeated Label labels_not_equals = 9;
  repeated Label labels_double_equals = 10;
}

message TrafficStatResponse {
  optional string namespace = 1;
  optional string pod = 2;
  optional uint32 identity = 3;
  optional uint64 bytes = 4;
  optional google.protobuf.Timestamp lastSync = 5;
  Status status = 6;
}

service InfoService {
  rpc GetTrafficStat(TrafficStatRequest) returns(stream TrafficStatResponse) {}
}
